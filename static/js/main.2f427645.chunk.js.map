{"version":3,"sources":["components/input.js","index.js"],"names":["InputField","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","synonyms","handleChange","bind","assertThisInitialized","getSuggestions","renderResponse","inherits","createClass","key","e","setState","target","res","console","log","status","length","newArr","i","Math","min","push","word","_this2","queryParams","wordQuery","endpoint","concat","fetch","then","response","ok","json","Error","jsonResponse","react_default","a","createElement","className","id","src","alt","onChange","placeholder","onClick","map","synonym","href","Component","ReactDOM","render","input_InputField","document","getElementById"],"mappings":"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","file":"static/js/main.2f427645.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class InputField extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {    \r\n        value: '',\r\n        synonyms: [],\r\n    };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getSuggestions = this.getSuggestions.bind(this);\r\n        this.renderResponse = this.renderResponse.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n           value: e.target.value,\r\n           synonyms: this.state.synonyms,\r\n        })\r\n    }\r\n\r\n    renderResponse(res) {\r\n        if (this.state.value === '') {\r\n            return\r\n        }\r\n        \r\n        if (!res) {\r\n            console.log(res.status);\r\n        }\r\n\r\n        if (!res.length) {\r\n            return (\r\n                this.setState({\r\n                value: this.state.value,\r\n                synonyms: ['Try again! There were no suggestions found!'],\r\n                    }\r\n                )  \r\n            )\r\n        }\r\n\r\n        let newArr = [];\r\n\r\n        for (let i = 0; i < Math.min(res.length, 10); i++) {\r\n            newArr.push(res[i].word);\r\n        };\r\n\r\n        return this.setState({\r\n            value: this.state.value,\r\n            synonyms: newArr\r\n        });\r\n    }\r\n    \r\n\r\n     getSuggestions(e) {\r\n        const url = 'https://api.datamuse.com/words';\r\n        const queryParams = '?rel_' + e.target.value + \"=\";\r\n        const wordQuery = this.state.value;\r\n        const endpoint = `${url}${queryParams}${wordQuery}`;\r\n\r\n         fetch(endpoint).then( response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error('Request failed! Try again.');   \r\n        }).then( jsonResponse => {\r\n           let response = this.renderResponse(jsonResponse);\r\n           console.log(response)\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n               <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                <div id=\"heading\">\r\n                    <img src=\"https://img.icons8.com/wired/64/000000/t.png\" alt=\"letter T\"></img>\r\n                    <img src=\"https://img.icons8.com/dotty/80/000000/delete-sign.png\" alt=\"X sign\"></img>\r\n                    <img src=\"https://img.icons8.com/wired/64/000000/t.png\" alt=\"letter T\"></img>\r\n                    <p>booster</p>\r\n                </div>\r\n                </header>\r\n               <nav className=\"inputPart\">\r\n                    <input onChange={this.handleChange} placeholder=\"Your word goes here...\" className=\"input\"></input>\r\n                    <button onClick={this.getSuggestions} value=\"syn\" className=\"animated pulse\">\r\n                        Find a synonym\r\n                    </button>\r\n                    <button onClick={this.getSuggestions} value=\"rhy\" className=\"animated pulse\">Find rhyming words</button>\r\n                    <button onClick={this.getSuggestions} value=\"jjb\" className=\"animated pulse\">Find describing adjectives</button>\r\n                    <button onClick={this.getSuggestions} value=\"ant\" className=\"animated pulse\">Find an antonym</button>\r\n               </nav>\r\n               <section className=\"resultPart\">\r\n               Results:\r\n                   <ul className=\"result\">\r\n                       {\r\n                           this.state.synonyms.map((synonym, id) => (\r\n                           <li key={id}>{synonym}</li>\r\n                       ))\r\n                     }\r\n                   </ul>\r\n               </section>\r\n               <footer className=\"footer\">\r\n                    <a href=\"https://icons8.com/\">\r\n                        Icons By Icons8\r\n                    </a>\r\n                </footer>\r\n               </div>\r\n        )\r\n    }\r\n}   \r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { InputField } from './components/input.js';\n\nReactDOM.render(<InputField/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}